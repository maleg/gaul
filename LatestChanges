Changes since release 0.1842:

Changes since release 0.1841:
- Hill climbing (random ascent and next ascent) algorithms completely rewritten.
- Numerous fixes for compilation with MingW ( http://www.mingw.org/ ) for Windows.
- Path to S-Lang headers is no longer hard-coded.
- Added kludge to avoid problem with "OpenMOSIX weird bus error bug".
- Added missing prototypes for built-in Tabu-search acceptance functions.
- Added simplex search algorithm, and an example.
- Added random search algorithm, and an example.
- Added systematic search algorithm, and an example.
- Added missing ga_crossover_double_singlepoints() and ga_crossover_double_doublepoints() functions.
- Some minor fixes for clean compilation on Solaris 8 and FreeBSD.
- Added steepest ascents code.

Changes since release 0.1840:
- Added a few missing intrinsic functions.
- Avoid use of acconfig.h in configuration since that is now deprecated and discouraged.
- Fixed configuration bug causing shared dynamic object librarys to not be installed under UNIX.
- Fixed minor bug in ga_evolution_forked() causing incorrect number of forked processes to be reported.  -- thanks to Daniel Pick.
- Fixed strsep() bug in compatibility.c
- Fixed stricmp()/strnicmp() problem on Cygwin platform.
- Updated configuration files for successful compilation on RedHat 8.0
- Improved configuration with respect to some simple platform specific optimisations.
- RPM spec file improved considerably.
- Simulated annealling algorithm completely rewritten.
- Tabu search algorithm completely rewritten.
- Three new examples added to demonstrate Tabu-searching and Simulated Annealling.
- Configure script now checks for a working stdbool.h header and a built-in _Bool type.
- Added configuration option to alter the default numbers of threads and/or processes spawned in multiprocessor code.

Changes since release 0.1839:
- Added ga_mutate_char_allpoint().
- Modified sorting routines such that identical results are produced on all supported platforms.
- Added 'double-array' chromosome similarity routines; Tanimoto, Dice, Cosine similarity coefficients.
- *** API CHANGE *** evolutionary functions now return the number of generations performed.
- *** API CHANGE *** ga_population_parameters() is now used to define elitism mode and evolutionary scheme instead of the evolutionary functions' parameter list.
- Evolutionary code cleaned and optimised for both speed and size through better code re-use.
- ga_population_set_scheme(), ga_population_set_elitism(), ga_population_set_crossover(), ga_population_set_mutation(), ga_population_set_migration() added.
- Example programs fixed with respect to the extensive API changes.
- Some unnecessary fitness evaluations are no longer performed.
- *** API CHANGE *** adaptation functions can no longer assume that passed entities have been evaluated (in fact, it is likely that they haven't).
- *** API CHANGE *** adaptation type is named "scheme" instead of "class" to avoid confusing the computer scientists ;)
- Changed the 'struggle' examples so that they use Stochastic Universal Sampling instead of Roulette Wheel Sampling.
- Fixes for compilation on the MacOS X platform.
- Fixes for compilation on the QNX V6 platform.
- Reduced number of dynamic libraries created.
- ga_evolution_forked() added, along with examples.
- Modified configure.in to enhance performance of Intel C/C++ compiler optimisations.
- Fixes for clean compilation with gcc 3.2 and the latest autotools.
- Example programs will no longer be installed into binary directory by 'make install'.
- Lots of extra error checking added around use of the internal population table.  This table is now deallocated when no populations exist.
- Several small memory leaks/errors eliminated from example programs.
- *** API CHANGE *** The chromsome static string functions have been replaced with versions which use dynamic allocation.  For example, ga_chromosome_integer_to_staticstring() has been replaced by ga_chromosome_integer_to_string().  The required parameters are different.
- Numerous minor tweaks have been applied to the example programs.

Changes since release 0.1838:
- Added Stochastic Universal Sampling selection functions ga_select_one_sus() and ga_select_two_sus().
- examples/struggle2 now uses stochastic universal sampling instead of roulette wheel sampling.
- Fixed stupid mistake in RPM spec file.
- Added ga_mutate_double_singlepoint_randomize() and ga_mutate_double_singlepoint_drift().
- Chromosome allocation and seeding functions now return boolean values for error checking use.
- Some fixes for compilation with Solaris/SunOS and the Sun Forte Developer C++ compiler.
- Added bitstring chromosome similarity routines; Tanimoto, Dice, Hamming, Euclidean, Cosine similarity coefficients.
- S-Lang interface code tidied.
- Added accessor functions: ga_entity_get_fitness(), ga_entity_set_fitness(), ga_population_get_stablesize(), ga_population_get_size(), ga_population_get_maxsize(), ga_population_set_stablesize().
- Added ga_population_clone_empty() function.
- Added ga_mutate_integer_allpoint() mutation function.
- Added working population and entity reading/writing functions and a new example program to demonstrate them.
- random_init() no longer needs to be called provided that random_seed() is called before any of the other PRNG functions.

Changes since release 0.1837:
- Documentation is now maintained in a seperate CVS module, gaul-docs.
- Added slang-devel requirement to spec file and renamed it from gaul.spec to gaul-devel.spec.
- Removed fixed upper size limit on populations, and adjusted some prototypes accordingly.  This breaks backwards compatibility for ga_population_new() and the associated S-Lang intrinsic.  The nnevolve and struggle4 examples required modification.
- Fixed memory corruption in ga_chromosome_double_to_staticstring() and ga_chromosome_int_to_staticstring().
- Numerous enhancements to the neural network utility library which is used by examples/nnevolve.
- Diagnostic functions display additional information.
- ROADMAP file added to CVS archive.
- Modifications for clean compilation under AIX (use gmake).
- Applied some fixes to enable compilation on the Cygwin platform.
- Error checking added in ga_get_entity_from_id().
- Internal changes to entity and population structures.
- Relaxed licensing conditions for util/SAA_header.h.
- Added dstr_fromstr() function to util/dstr_util.c.
- Roulette wheel now starts spinning from random position.
- Fixed bug in, and optimised, ga_replace_by_fitness().

Changes since release 0.1836:
- Added ga_get_all_populations() which returns array of all currently allocated populations.
- Added ga_get_all_population_ids() which returns array of all currently allocated populations' indices.
- Tidied some comments.
- Corrected prototype for ga_genesis_boolean().
- More documentation added.
- ga_bit_copy() now safely handles overlapping sequences of bits.
- Can now link both GAUL and glib/gtk into the same program.
- Initial support for new multi-processor algorithms added.
- By default dumping of statistics is now disabled at compile time.
- Updated utility routines to sync with other projects.
- GNU Libtool is now used for library handling.
- Minor alterations required for clean compilation using Intel C/C++.
- A neural network evolution example added.
- A multi-processor (using MPI) island-model example added.
- Added ga_entity_evaluate() convenience function.
- Removed some surplus files from the CVS archive and distribution.
- Added textual summary of configure process at end of "./configure" output.
- Removed unneeded header files from installation.
- Fixed gaul.spec file so that RPM packages actually work.
- Many millions of minor bugfixes.
- Many millions of major bugfixes.
- Many millions of new bugs.

Changes since release 0.1835:
- Lots of little bugfixes.
- More accessor functions added.
- SunOS compilation.
- Added version of the struggle example to show usage of multiple populations: examples/struggle5.c
- Many documentation fixes.
- Example files now in example directory.  Test code will be located in the test directory instead.
- Some miscellaneous code tidying.

Changes since release 0.1834:
- Tidied pingpong.c
- Added missing ga_evolution_steady_state() prototype.
- Added version of the royalroad example which uses a steady state GA instead: tests/royalroad_ss.c
- Added version of the struggle example which uses a steady state GA instead: tests/struggle_ss.c
- Added version of the struggle example for comparison of the alternative evolutionary schemes: tests/struggle2.c
- Added version of the struggle example to show custom termination criteria and some simple statistics: tests/struggle3.c
- Added version of the struggle example to show usage of custom operators: tests/struggle4.c
- Renamed the SLang intrinsic ga_entity_clone() to ga_entity_clone_wrapper(), and added new, C-callable ga_entity_clone().
- Renamed all ga_copy_entity[_XXX]() functions to ga_entity_copy[_XXX]() for consistency.
- For convenience, added ga_population_clone().
- GA_UTIL_MIN_FITNESS renamed to GA_MIN_FITNESS, and is correctly used everywhere now.
- Fixed chromosome replication bug (I was copying destination to source, doh!).
- Some tutorial-style documentation about the "struggle" examples added.
- Tidied some miscellaneous comments.
- Moved some type definitions into the public header, gaul.h
- Some additional checks performed by the configure script.
- All required files will now be distributed.  Why people didn't tell me the recent distribution didn't compile, I don't know...
- Website fixes.
- Configure script stores output from "uname -a" which will aid in fixing people's compilation proplems.
- A basic diagnostic program added as tests/diagnostics.c
- Fixed multi-population extinction bug.
- Reorganised stats functions.

Changes since release 0.1833:
- Changes for docs/html/books.html to validate.
- Used cvs2cl.pl to create change log.
- Modifications for compilation using MIPSPro C compiler under IRIX.
- Added bitstring chromosomes (incl. the necessary handling routines).
- Some more documentation.
- examples/chromostubs.c added.
- .cvsignore updated, then renamed to cvsignore.
- In many of the examples, ga_get_entity_from_rank(pop,0) is now used.

Changes since release 0.1832:
- Added 'GPL'd header' to source files which were missing it.
- Changes for compilation under FreeBSD. (There are still lots of warnings about the use of the deprecated header file "malloc.h")
- Changes for compilation under Solaris.
- Fixed some spelling mistakes/typos in the headers and on the web-pages.
- Slightly updated the INSTALL file.
- Rationalised use of population_extinction() in tests/struggle.c
- Sorted out stuff required by 'make dist' and friends.
- The documentation will now be distributed seperately to the source code, at least until the stable release.
- Supported platform info added to web-pages.

Changes since release 0.1831:
- Fixed minor bug in ./configure.in, message said "--with-slang=no", but should have said "--enable-slang=no".
- Added files tests/btree.c and tests/btree.h - code doesn't compile without them!
- Some more, really suspect, functions added to src/ga_utility.c.  ga_entity_dump() and ga_population_dump() also added.
- New "printable characters"-based mutations etc.
- A new example program added, tests/struggle.c
- src/libga.a renamed to src/libgaul.a
- Some additional prototypes added into the header files.
- Examples now use ga_chromosome_XXX_to_staticstring() where appropriate.
- Replaced s_calloc() calls in src/ga_chromo.c with s_malloc() calls.
- Fixed bug in ga_select_stats().
- Overhauled tests/Makefile.am
- Fixed serious bug (segfault) in ga_select_roulette_{one|two}().
- Added ga_crossover_char_{singlepoints|doublepoints}().

Release 0.1831 was uploaded to sourceforge.net on 16th June 2001.

